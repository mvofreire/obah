{"version":3,"sources":["../../application/controllers/user.controller.js"],"names":["me","req","res","appContext","json","addFavorite","id","body","userSession","Usuario","findById","user","result","status","send","removeFavorite","params","console","log","favorites","populate","saved","setConfig","key","value","getConfig"],"mappings":"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","sourcesContent":["import Usuario from \"../models/Usuario\";\r\n\r\nconst me = (req, res) => {\r\n  const me = req.appContext;\r\n\r\n  res.json(me);\r\n};\r\n\r\nconst addFavorite = async (req, res) => {\r\n  try {\r\n    const { id } = req.body;\r\n    const { userSession } = req.appContext;\r\n\r\n    const user = await Usuario.findById(userSession.id);\r\n    const result = await user.addFavorite(id);\r\n    res.json(result);\r\n  } catch (error) {\r\n    res.status(500).send(error);\r\n  }\r\n};\r\n\r\nconst removeFavorite = async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    console.log(id);\r\n    const { userSession } = req.appContext;\r\n    const user = await Usuario.findById(userSession.id);\r\n    const result = await user.removeFavorite(id);\r\n    res.json(result);\r\n  } catch (error) {\r\n    res.status(500).send(error);\r\n  }\r\n};\r\n\r\nconst favorites = async (req, res) => {\r\n  try {\r\n    const { userSession } = req.appContext;\r\n    const user = await Usuario.findById(userSession.id).populate(\r\n      \"saved.reference\"\r\n    );\r\n\r\n    if (user) {\r\n      res.json(user.saved);\r\n    } else {\r\n      res.status(404);\r\n    }\r\n  } catch (error) {\r\n    res.status(500).send(error);\r\n  }\r\n};\r\n\r\nconst setConfig = async (req, res) => {\r\n  try {\r\n    const { key, value } = req.body;\r\n    const { id } = req.appContext.userSession;\r\n    const user = await Usuario.findById(id);\r\n    await user.setConfig(key, value);\r\n    res.json(true);\r\n  } catch (error) {\r\n    res.status(500).send(error);\r\n  }\r\n};\r\n\r\nconst getConfig = async (req, res) => {\r\n  try {\r\n    const { key } = req.params;\r\n    const { id } = req.appContext.userSession;\r\n    const user = await Usuario.findById(id);\r\n    const result = user.getConfig(key, value);\r\n    res.json(result);\r\n  } catch (error) {\r\n    res.status(500).send(error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  me,\r\n  addFavorite,\r\n  removeFavorite,\r\n  favorites,\r\n  setConfig,\r\n  getConfig\r\n};\r\n"],"file":"user.controller.js"}